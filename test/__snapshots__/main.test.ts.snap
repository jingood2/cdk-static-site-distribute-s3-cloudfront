// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Mappings": Object {
    "AWSCloudFrontPartitionHostedZoneIdMap": Object {
      "aws": Object {
        "zoneId": "Z2FDTNDATAQYW2",
      },
      "aws-cn": Object {
        "zoneId": "Z3RFFRIM2A3IF5",
      },
    },
  },
  "Outputs": Object {
    "SpaEcmebucketname6AAFAC01": Object {
      "Export": Object {
        "Name": "Ecme-bucket-name",
      },
      "Value": Object {
        "Ref": "SpaEcmesitebucket30365DA5",
      },
    },
    "SpaEcmedistribution3D56F66F": Object {
      "Export": Object {
        "Name": "Ecme-distribution",
      },
      "Value": Object {
        "Ref": "SpaEcmesitedistributionCFDistributionED0C183B",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "HostDomainName": Object {
      "Default": "hello2.skcnctf.tk",
      "Description": "Host Domain Name",
      "Type": "String",
    },
    "ResourcePrefix": Object {
      "Default": "Ecme",
      "Description": "ResourcePrefix",
      "Type": "String",
    },
    "Route53HostedZoneId": Object {
      "Default": "Z10008191COSSLORKT6ZO",
      "Description": "Route53 Hosted Zone Id",
      "Type": "String",
    },
    "Route53HostedZoneName": Object {
      "Default": "skcnctf.tk",
      "Description": "Route53 Hosted Zone Name",
      "Type": "String",
    },
    "includeWWW": Object {
      "AllowedValues": Array [
        "true",
        "false",
      ],
      "Description": "include WWW true/false",
      "Type": "String",
    },
  },
  "Resources": Object {
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": Object {
      "DependsOn": Array [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "cdk-hnb659fds-assets-037729278610-ap-northeast-2",
          "S3Key": "e3d9996b6fafcc7da88312672e15e3cc925b02cffc6f01a615d81f22303e3ae0.zip",
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "SpaEcmebucketdeploymentAwsCliLayer79806208",
          },
        ],
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.7",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-hnb659fds-assets-037729278610-ap-northeast-2",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-hnb659fds-assets-037729278610-ap-northeast-2/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SpaEcmesitebucket30365DA5",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SpaEcmesitebucket30365DA5",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "cloudfront:GetInvalidation",
                "cloudfront:CreateInvalidation",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": Array [
          Object {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "cdk-hnb659fds-assets-037729278610-ap-northeast-2",
          "S3Key": "bdb08b9984816ecf43301a0c6d8913e270ee2448940b6b95e430dd222a4d90be.zip",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "SpaEcmesitebucket30365DA5",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SpaEcmebucketdeploymentAwsCliLayer79806208": Object {
      "Properties": Object {
        "Content": Object {
          "S3Bucket": "cdk-hnb659fds-assets-037729278610-ap-northeast-2",
          "S3Key": "187e7a21dd5d55d36f1f45007ff6bbc5713cb0866ca86224c0f1f86b3d1e76a0.zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "SpaEcmebucketdeploymentCustomResourceA2BC1C18": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DestinationBucketName": Object {
          "Ref": "SpaEcmesitebucket30365DA5",
        },
        "DistributionId": Object {
          "Ref": "SpaEcmesitedistributionCFDistributionED0C183B",
        },
        "DistributionPaths": Array [
          "/*",
        ],
        "Prune": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": Array [
          "cdk-hnb659fds-assets-037729278610-ap-northeast-2",
        ],
        "SourceObjectKeys": Array [
          "0ab25797eac2d57adc69b02448a357576381c70ba8ad2e203965d12a7a6811d8.zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "SpaEcmecloudfrontOAI21B310E1": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "OAI for Spa",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "SpaEcmesitealiasrecord01BFCC1229": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "SpaEcmesitedistributionCFDistributionED0C183B",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": "Z10008191COSSLORKT6ZO",
        "Name": "homepage.skcnctf.tk.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "SpaEcmesitealiasrecord02C35F4F58": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "SpaEcmesitedistributionCFDistributionED0C183B",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": "Z10008191COSSLORKT6ZO",
        "Name": "www.homepage.skcnctf.tk.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "SpaEcmesitebucket30365DA5": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketName": "homepage.skcnctf.tk",
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          Object {
            "Key": "aws-cdk:cr-owned:cfe70658",
            "Value": "true",
          },
        ],
        "WebsiteConfiguration": Object {
          "ErrorDocument": "error.html",
          "IndexDocument": "index.html",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "SpaEcmesitebucketAutoDeleteObjectsCustomResource21FB64AD": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "SpaEcmesitebucketPolicy9446EF62",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "SpaEcmesitebucket30365DA5",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "SpaEcmesitebucketPolicy9446EF62": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "SpaEcmesitebucket30365DA5",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SpaEcmesitebucket30365DA5",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SpaEcmesitebucket30365DA5",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "SpaEcmecloudfrontOAI21B310E1",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "SpaEcmesitebucket30365DA5",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "SpaEcmesitecertificateCertificateRequestorFunctionE74EFC86": Object {
      "DependsOn": Array [
        "SpaEcmesitecertificateCertificateRequestorFunctionServiceRoleDefaultPolicyB4A022D6",
        "SpaEcmesitecertificateCertificateRequestorFunctionServiceRole235F7D2F",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "cdk-hnb659fds-assets-037729278610-ap-northeast-2",
          "S3Key": "4d3f21fe611d8ebfd4f1f69754b7f986fed4ecf648d4fafe941cd81ede6cf60c.zip",
        },
        "Handler": "index.certificateRequestHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "SpaEcmesitecertificateCertificateRequestorFunctionServiceRole235F7D2F",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SpaEcmesitecertificateCertificateRequestorFunctionServiceRole235F7D2F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SpaEcmesitecertificateCertificateRequestorFunctionServiceRoleDefaultPolicyB4A022D6": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
                "acm:AddTagsToCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:changeResourceRecordSets",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":route53:::hostedzone/Z10008191COSSLORKT6ZO",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SpaEcmesitecertificateCertificateRequestorFunctionServiceRoleDefaultPolicyB4A022D6",
        "Roles": Array [
          Object {
            "Ref": "SpaEcmesitecertificateCertificateRequestorFunctionServiceRole235F7D2F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SpaEcmesitecertificateCertificateRequestorResource5EC2C904": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DomainName": "homepage.skcnctf.tk",
        "HostedZoneId": "Z10008191COSSLORKT6ZO",
        "Region": "us-east-1",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "SpaEcmesitecertificateCertificateRequestorFunctionE74EFC86",
            "Arn",
          ],
        },
        "SubjectAlternativeNames": Array [
          "www.homepage.skcnctf.tk",
        ],
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "SpaEcmesitedistributionCFDistributionED0C183B": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "Aliases": Array [
            "homepage.skcnctf.tk",
            "www.homepage.skcnctf.tk",
          ],
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
              "OPTIONS",
            ],
            "CachedMethods": Array [
              "GET",
              "HEAD",
            ],
            "Compress": true,
            "ForwardedValues": Object {
              "Cookies": Object {
                "Forward": "none",
              },
              "QueryString": false,
            },
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "SpaEcmesitebucket30365DA5",
                  "RegionalDomainName",
                ],
              },
              "Id": "origin1",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "SpaEcmecloudfrontOAI21B310E1",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": Object {
            "AcmCertificateArn": Object {
              "Fn::GetAtt": Array [
                "SpaEcmesitecertificateCertificateRequestorResource5EC2C904",
                "Arn",
              ],
            },
            "MinimumProtocolVersion": "TLSv1.2_2021",
            "SslSupportMethod": "sni-only",
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
